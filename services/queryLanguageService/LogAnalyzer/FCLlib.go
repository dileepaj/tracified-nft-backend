/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: FCLWrapper.i

package FCLlib

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef _gostring_ swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
extern void _wrap_Swig_free_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_FCLlib_1ee54ad49562e6e8(swig_intgo arg1);
extern uintptr_t _wrap_new_StringVector__SWIG_0_FCLlib_1ee54ad49562e6e8(void);
extern uintptr_t _wrap_new_StringVector__SWIG_1_FCLlib_1ee54ad49562e6e8(swig_type_1 arg1);
extern swig_type_2 _wrap_StringVector_size_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern swig_type_3 _wrap_StringVector_capacity_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern void _wrap_StringVector_reserve_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_4 arg2);
extern _Bool _wrap_StringVector_isEmpty_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern void _wrap_StringVector_clear_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern void _wrap_StringVector_add_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_5 arg2);
extern swig_type_6 _wrap_StringVector_get_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_StringVector_set_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_intgo arg2, swig_type_7 arg3);
extern void _wrap_delete_StringVector_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern uintptr_t _wrap_new_ByteVector__SWIG_0_FCLlib_1ee54ad49562e6e8(void);
extern uintptr_t _wrap_new_ByteVector__SWIG_1_FCLlib_1ee54ad49562e6e8(swig_type_8 arg1);
extern swig_type_9 _wrap_ByteVector_size_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern swig_type_10 _wrap_ByteVector_capacity_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern void _wrap_ByteVector_reserve_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_11 arg2);
extern _Bool _wrap_ByteVector_isEmpty_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern void _wrap_ByteVector_clear_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern void _wrap_ByteVector_add_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, char arg2);
extern char _wrap_ByteVector_get_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ByteVector_set_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_intgo arg2, char arg3);
extern void _wrap_delete_ByteVector_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
extern void _wrap_FCLWrapper_RunELInterpretter_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_12 arg2);
extern swig_type_13 _wrap_FCLWrapper_GetLDALResult_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_14 arg2);
extern swig_type_15 _wrap_FCLWrapper_GetTDPResult_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_16 arg2);
extern swig_type_17 _wrap_FCLWrapper_GetLogLDALResult_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_18 arg2);
extern swig_type_19 _wrap_FCLWrapper_GetOTPResult_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_20 arg2);
extern swig_type_21 _wrap_FCLWrapper_GetBuildResult_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_22 arg2);
extern swig_type_23 _wrap_FCLWrapper_GetLogLDALResultV2_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_24 arg2, swig_type_25 arg3, swig_type_26 arg4);
extern swig_type_27 _wrap_FCLWrapper_GetTDPResultV2_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_28 arg2, swig_type_29 arg3, swig_type_30 arg4);
extern swig_type_31 _wrap_FCLWrapper_GetOTPResultV2_FCLlib_1ee54ad49562e6e8(uintptr_t arg1, swig_type_32 arg2, swig_type_33 arg3, swig_type_34 arg4);
extern uintptr_t _wrap_new_FCLWrapper_FCLlib_1ee54ad49562e6e8(void);
extern void _wrap_delete_FCLWrapper_FCLlib_1ee54ad49562e6e8(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_FCLlib_1ee54ad49562e6e8(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrStringVector uintptr

func (p SwigcptrStringVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringVector) SwigIsStringVector() {
}

func NewStringVector__SWIG_0() (_swig_ret StringVector) {
	var swig_r StringVector
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_0_FCLlib_1ee54ad49562e6e8()))
	return swig_r
}

func NewStringVector__SWIG_1(arg1 int64) (_swig_ret StringVector) {
	var swig_r StringVector
	_swig_i_0 := arg1
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_1_FCLlib_1ee54ad49562e6e8(C.swig_type_1(_swig_i_0))))
	return swig_r
}

func NewStringVector(a ...interface{}) StringVector {
	argc := len(a)
	if argc == 0 {
		return NewStringVector__SWIG_0()
	}
	if argc == 1 {
		return NewStringVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStringVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_size_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_capacity_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_reserve_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), C.swig_type_4(_swig_i_1))
}

func (arg1 SwigcptrStringVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_StringVector_isEmpty_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_StringVector_clear_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrStringVector) Add(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_add_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrStringVector) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_StringVector_get_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrStringVector) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_StringVector_set_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteStringVector(arg1 StringVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_StringVector_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0))
}

type StringVector interface {
	Swigcptr() uintptr
	SwigIsStringVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrByteVector uintptr

func (p SwigcptrByteVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrByteVector) SwigIsByteVector() {
}

func NewByteVector__SWIG_0() (_swig_ret ByteVector) {
	var swig_r ByteVector
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_0_FCLlib_1ee54ad49562e6e8()))
	return swig_r
}

func NewByteVector__SWIG_1(arg1 int64) (_swig_ret ByteVector) {
	var swig_r ByteVector
	_swig_i_0 := arg1
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_1_FCLlib_1ee54ad49562e6e8(C.swig_type_8(_swig_i_0))))
	return swig_r
}

func NewByteVector(a ...interface{}) ByteVector {
	argc := len(a)
	if argc == 0 {
		return NewByteVector__SWIG_0()
	}
	if argc == 1 {
		return NewByteVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrByteVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_size_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_capacity_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_reserve_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), C.swig_type_11(_swig_i_1))
}

func (arg1 SwigcptrByteVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ByteVector_isEmpty_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_ByteVector_clear_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrByteVector) Add(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_add_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrByteVector) Get(arg2 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_ByteVector_get_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Set(arg2 int, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ByteVector_set_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

func DeleteByteVector(arg1 ByteVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ByteVector_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0))
}

type ByteVector interface {
	Swigcptr() uintptr
	SwigIsByteVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

type SwigcptrFCLWrapper uintptr

func (p SwigcptrFCLWrapper) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFCLWrapper) SwigIsFCLWrapper() {
}

func (arg1 SwigcptrFCLWrapper) RunELInterpretter(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FCLWrapper_RunELInterpretter_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrFCLWrapper) GetLDALResult(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FCLWrapper_GetLDALResult_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_14)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFCLWrapper) GetTDPResult(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FCLWrapper_GetTDPResult_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_16)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFCLWrapper) GetLogLDALResult(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FCLWrapper_GetLogLDALResult_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_18)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFCLWrapper) GetOTPResult(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FCLWrapper_GetOTPResult_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_20)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFCLWrapper) GetBuildResult(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FCLWrapper_GetBuildResult_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_22)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFCLWrapper) GetLogLDALResultV2(arg2 string, arg3 string, arg4 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_FCLWrapper_GetLogLDALResultV2_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_24)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_26)(unsafe.Pointer(&_swig_i_3)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFCLWrapper) GetTDPResultV2(arg2 string, arg3 string, arg4 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_FCLWrapper_GetTDPResultV2_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_28)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_29)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_30)(unsafe.Pointer(&_swig_i_3)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFCLWrapper) GetOTPResultV2(arg2 string, arg3 string, arg4 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_FCLWrapper_GetOTPResultV2_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0), *(*C.swig_type_32)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_33)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_34)(unsafe.Pointer(&_swig_i_3)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewFCLWrapper() (_swig_ret FCLWrapper) {
	var swig_r FCLWrapper
	swig_r = (FCLWrapper)(SwigcptrFCLWrapper(C._wrap_new_FCLWrapper_FCLlib_1ee54ad49562e6e8()))
	return swig_r
}

func DeleteFCLWrapper(arg1 FCLWrapper) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FCLWrapper_FCLlib_1ee54ad49562e6e8(C.uintptr_t(_swig_i_0))
}

type FCLWrapper interface {
	Swigcptr() uintptr
	SwigIsFCLWrapper()
	RunELInterpretter(arg2 string)
	GetLDALResult(arg2 string) (_swig_ret string)
	GetTDPResult(arg2 string) (_swig_ret string)
	GetLogLDALResult(arg2 string) (_swig_ret string)
	GetOTPResult(arg2 string) (_swig_ret string)
	GetBuildResult(arg2 string) (_swig_ret string)
	GetLogLDALResultV2(arg2 string, arg3 string, arg4 string) (_swig_ret string)
	GetTDPResultV2(arg2 string, arg3 string, arg4 string) (_swig_ret string)
	GetOTPResultV2(arg2 string, arg3 string, arg4 string) (_swig_ret string)
}


