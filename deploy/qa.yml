---
- hosts: qa
  environment:
    PYTHONPATH: /home/{{ ansible_user }}/.local/lib/python3.10/site-packages
  tasks:
    - name: Install required system packages
      become: true
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
          - python3-setuptools
        state: latest
        update_cache: true
    - name: Add Docker GPG key to APT keyring
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
        | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg --batch --yes
      become: true
    - name: Add Docker repository to apt sources list
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
        | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      become: true
    - name: Install docker CE
      become: true
      apt:
        name: docker-ce
        state: present
        update_cache: yes
    - name: Install pip
      become: true
      apt:
        name: python3-pip
        state: present
        update_cache: yes
    - name: Install docker-py
      pip:
        name: docker
    - name: Install AWS CLI
      pip:
        name: awscli
    - name: Get ECR login credentials and login with Docker
      become: true
      shell: "$(/home/{{ ansible_user }}/.local/bin/aws ecr get-login --no-include-email --region ap-south-1)"
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    - name: Create volume for docker
      become: true
      docker_volume:
        name: nft-backend-logs
    - name: Run docker
      become: true
      debugger: on_failed
      docker_container:
        name: tracified-nft-backend
        image: 453230908534.dkr.ecr.ap-south-1.amazonaws.com/tracified/nft-backend
        published_ports: "6081:6081"
        restart: yes
        restart_policy: on-failure
        state: started
        pull: yes
        volumes:
          - nft_backend_logs:/app/logs
        env:
          BE_PORT: "{{ lookup('env','BE_PORT') }}"
          BE_MONGOLAB_URI: "{{ lookup('env','BE_MONGOLAB_URI') }}"
          BRANCH_NAME: "{{lookup('env','BRANCH_NAME')}}"
          BACKEND_TOKEN: "{{lookup('env','BACKEND_TOKEN')}}"
          BACKEND_BASEURL: "{{lookup('env','BACKEND_BASEURL')}}"
          SENDER_EMAILADRESS: "{{lookup('env','SENDER_EMAILADRESS')}}"
          SENDER_EMAILADRESS_APPPWD: "{{lookup('env','SENDER_EMAILADRESS_APPPWD')}}"
          MK_SENDER_EMAILADDRESS: "{{lookup('env','MK_SENDER_EMAILADDRESS')}}"
          MK_SENDER_EMAIL_KEY: "{{lookup('env','MK_SENDER_EMAIL_KEY')}}"
          HOST_EMAIL: "{{lookup('env','HOST_EMAIL')}}"
          EMAIL_PORT: "{{lookup('env','EMAIL_PORT')}}"
          JWT_DECODE_KEY: "{{lookup('env','JWT_DECODE_KEY')}}"
          DATABASE_NAME: "{{lookup('env','DATABASE_NAME')}}"
          RURI_SHOPIFY: "{{lookup('env','RURI_SHOPIFY')}}"
          DIGITALTWIN: "{{lookup('env','DIGITALTWIN')}}"
